{"version":3,"sources":["components/AddContact.js","components/Contacts.js","components/FilterContacts.js","components/Header.js","components/Alert.js","App.js","index.js"],"names":["AddContacts","state","name","number","handleSubmit","e","preventDefault","props","onHandleSubmit","setState","handleChng","target","value","this","Form","onSubmit","Label","Input","type","onChange","Button","Component","styled","form","input","label","button","Contacts","list","deleteContactById","deleteContact","id","dataset","DIV","TransitionGroup","component","map","item","ListItem","timeout","appear","Span","Text","data-id","onClick","transition","li","attrs","mountOnEnter","unmountOnExit","span","div","p","FilterContacts","handleFilter","Div","in","Header","CSSTransition","classNames","Alert","alert","canselAlert","console","log","className","App","contacts","filter","some","toLowerCase","prev","setTimeout","uuidv4","filterContact","includes","localStorage","getItem","JSON","parse","length","_","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14ad14f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nexport default class AddContacts extends Component {\r\n    static propTypes = {\r\n        onHandleSubmit: PropTypes.func,\r\n    }\r\n\r\n    state = {\r\n    name: '',\r\n    number: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        this.props.onHandleSubmit({ name, number });\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    handleChng = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState(() => ({[name]: value}))\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n    return (\r\n        <Form name=\"phoneBook\" onSubmit={this.handleSubmit}>\r\n            <Label> Name\r\n           <Input name=\"name\" type=\"text\" value={name} onChange={this.handleChng} />\r\n            </Label>\r\n            <Label> Number\r\n           <Input name=\"number\" type=\"text\" value={number} onChange={this.handleChng} />\r\n            </Label>\r\n            <Button type=\"submit\" name=\"submitBtn\">Add Contact</Button>\r\n        </Form>\r\n    )\r\n    }\r\n};\r\n\r\nconst Form = styled.form`\r\n/* border: 1px solid SteelBlue; */\r\nwidth: 100%;\r\npadding: 10px;\r\npadding: 0;\r\n/* box-shadow: 1px 1px 10px 1px steelblue; */\r\n`;\r\n\r\nconst Input = styled.input`\r\ncolor: steelblue;\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 40px;\r\nmargin-top: 10px;\r\nmargin-bottom: 10px;\r\npadding: 10px;\r\nborder: 1px solid lightblue;\r\nfont-weight: 400;\r\n/* box-shadow: 1px 1px 10px 1px lightblue; */\r\noutline: none;\r\n&: focus {\r\n    border: 2px solid SteelBlue;\r\n    box-shadow: 1px 1px 10px 1px steelblue;\r\n    }\r\n\r\n`;\r\n\r\nconst Label = styled.label`\r\nmargin-top: 10px;\r\nfont-weight: 500;\r\n`;\r\n\r\nconst Button = styled.button`\r\nfont-weight: bold;\r\ncolor: steelblue;\r\nwidth: 100%;\r\nheight: 40px;\r\nmargin-top: 10px;\r\nmargin-bottom: 10px;\r\nborder: 1px solid lightblue;\r\nborder-radius: 5px;\r\noutline: none;\r\npadding-left: 10px;\r\npadding-right: 10px;\r\nfont-weight: 500;\r\n&:active {\r\n    border: 2px solid SteelBlue;\r\n    box-shadow: 1px 1px 10px 1px steelblue;\r\n}\r\n&:hover {\r\n    border: 2px solid SteelBlue;\r\n    box-shadow: 1px 1px 10px 1px steelblue;\r\n}\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup } from 'react-transition-group';\r\nimport transition from 'styled-transition-group';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Contacts = ({ list, deleteContactById }) => {\r\n\r\n    const deleteContact = (e) => {\r\n        const id = e.target.dataset.id\r\n        deleteContactById(id)\r\n    }\r\n \r\n    return (\r\n        <DIV>\r\n        <TransitionGroup component='ul'> \r\n              {list.map((item) => {\r\n            return (\r\n                <ListItem key={item.id} timeout={250} appear>\r\n                    <Span></Span><Text>{item.name}: {item.number}</Text>\r\n                    <Button type=\"button\" data-id = {item.id} onClick={deleteContact} >Delete</Button>\r\n                </ListItem>\r\n            )\r\n        })}\r\n            </TransitionGroup>\r\n            </DIV>\r\n\r\n    )\r\n}\r\n\r\nexport default Contacts\r\n\r\nContacts.propTypes = {\r\n    list: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n    deleteContactById: PropTypes.func.isRequired,\r\n}\r\n\r\nconst ListItem = transition.li.attrs({\r\n    mountOnEnter: true,\r\n    unmountOnExit: true,\r\n    timeout: 1000,\r\n})`\r\n&:appear {\r\n    transform: translateX(-100%); \r\n    opacity: 0.1;\r\n}\r\n&:appear-active {\r\n  transform: translateX(0);\r\n    opacity: 1;\r\n  transition: all 250ms ease-in;  \r\n}\r\n&:enter { \r\n    transform: translateX(-100%); \r\n    opacity: 0.1;\r\n}\r\n&:enter-active {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  transition: all 250ms ease-in;\r\n}\r\n&:exit {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n}\r\n&:exit-active {\r\n    transform: translateX(200%);\r\n    opacity: 0.1;\r\n    transition: all 250ms ease-in;\r\n}\r\n\r\ndisplay: flex;\r\njustify-content: space-between;\r\nmargin-bottom: 10px;\r\nalign-items: baselin;\r\n\r\n`;\r\n\r\nconst Button = styled.button`\r\nfont-weight:bold;\r\ncolor: steelblue;\r\nheight: 100%;\r\nborder: 1px solid lightblue;\r\nborder-radius: 5px;\r\npadding-left: 10px;\r\npadding-right: 10px;\r\noutline: none;\r\nmargin-left: 10px;\r\n&:active {\r\n    border: 2px solid SteelBlue;\r\n    box-shadow: 1px 1px 10px 1px steelblue;\r\n}\r\n&:hover {\r\n    border: 2px solid SteelBlue;\r\n    box-shadow: 1px 1px 10px 1px steelblue;\r\n`;\r\n\r\nconst Span = styled.span`\r\ndisplay: block;\r\nwidth: 10px;\r\nheight: 10px;\r\nbackground-color: steelblue;\r\nborder-radius: 50%;\r\nmargin-right: 10px;\r\n`;\r\n\r\nconst DIV = styled.div`\r\n/* outline: 1px solid steelblue; */\r\n/* padding-left: 10px; */\r\n/* width: 500px; */\r\n`\r\n\r\n\r\nconst Text = styled.p`\r\nmargin-top: 5px`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport transition from 'styled-transition-group';\r\n\r\nconst FilterContacts = ({ handleFilter }) => {\r\n    \r\n    const onFilterChng = (e) => {\r\n         handleFilter(e.target.value)\r\n    }; \r\n\r\n    return (\r\n        <>\r\n        <Div in={true} timeout={250} appear>\r\n        <Label> Find contacts by name:\r\n        <Input name=\"filter\" type=\"search\" onChange={onFilterChng}/>\r\n        </Label> \r\n        </Div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default FilterContacts\r\n\r\nFilterContacts.propTypes = {\r\n    handleFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst Input = styled.input`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 40px;\r\nmargin-top: 10px;\r\nmargin-bottom: 25px;\r\npadding: 10px;\r\nborder: 1px solid lightblue;\r\nfont-weight: 400;\r\noutline: none;\r\n&: focus {\r\n    border: 2px solid SteelBlue;\r\n    box-shadow: 1px 1px 10px 1px steelblue;\r\n    }\r\n`;\r\n\r\nconst Label = styled.label`\r\nmargin-top: 10px;\r\nfont-weight: 500;\r\n`;\r\n\r\nconst Div = transition.div.attrs({\r\n  timeout: 250,\r\n})`\r\n&:appear {\r\n    transform: translateX(-100%); \r\n}\r\n&:appear-active {\r\n  transform: translateX(0);\r\n  transition: all 250ms ease-in;  \r\n}\r\n&:enter { \r\n    transform: translateX(-100%); \r\n}\r\n&:enter-active {\r\n    transform: translateX(0);\r\n  transition: all 250ms ease-in;\r\n}\r\n&:exit {\r\n    transform: translateX(0);\r\n}\r\n&:exit-active {\r\n    transform: translateX(200%);\r\n    transition: all 250ms ease-in;\r\n}\r\n  `;","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../index.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n        <CSSTransition\r\n        in={true}\r\n        appear\r\n          timeout={500}\r\n          classNames=\"title\"\r\n          unmountOnExit>\r\n                <h2>Phonebook</h2>\r\n            </CSSTransition>\r\n            \r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport '../index.css'\r\n\r\n\r\nconst Alert = ({ alert, canselAlert }) => {\r\n    \r\nconsole.log(alert)\r\n    return (\r\n     <CSSTransition\r\n        in={alert}\r\n        timeout={500}\r\n        classNames=\"notification\"\r\n            unmountOnExit>\r\n            <div className='notification'>\r\n            <h2>This contact already exist!</h2>\r\n            </div>\r\n        </CSSTransition> \r\n    );\r\n}\r\n\r\nexport default Alert;\r\n\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport transition from 'styled-transition-group';\r\nimport AddContact from './components/AddContact'\r\nimport Contacts from './components/Contacts';\r\nimport FilterContacts from './components/FilterContacts';\r\nimport Header from './components/Header';\r\nimport Alert from './components/Alert';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    alert: false,\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem('contacts')) {\r\n      const contactsLS = JSON.parse(localStorage.getItem('contacts'));\r\n      contactsLS.length &&\r\n      this.setState({ contacts: JSON.parse(localStorage.getItem('contacts')) })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n    }\r\n  }\r\n  \r\n  onHandleSubmit = ({ name, number }) => {\r\n    if (this.state.contacts\r\n        .some((item => item.name.toLowerCase() === name.toLowerCase()))) {\r\n      this.setState((prev) => ({ alert: !prev.alert }));\r\n   setTimeout(() => {\r\n     setTimeout(this.setState((prev) => ({ alert: !prev.alert })))\r\n   }, 1500);\r\n      return\r\n    }\r\n\r\n\r\n    this.setState((prev) => ({\r\n        contacts: [...prev.contacts, { name, number, id: uuidv4() }],\r\n    }))\r\n  }\r\n\r\n  deleteContactById = (id) => {\r\n      this.setState({\r\n        contacts: [...this.state.contacts.filter((item) => item.id !== id)], \r\n      filter: ''  \r\n    })\r\n  }\r\n  handleFilter = (value) => {\r\n    this.setState({filter: value })\r\n  }\r\n\r\n    filterContact = () => {\r\n      const { filter, contacts } = this.state;\r\n      return contacts.filter((item) => (item.name.toLowerCase().includes(filter.toLowerCase())))\r\n    }\r\n \r\n\r\n  render() {\r\n    return (\r\n    <Div>\r\n        <Header />\r\n        <Alert alert={this.state.alert} />       \r\n        <AddContact onHandleSubmit={this.onHandleSubmit}/>\r\n        <h2>Contacts</h2>\r\n       {(this.state.contacts.length>2) && <FilterContacts handleFilter={this.handleFilter}/>}\r\n        <Contacts list={this.filterContact()} deleteContactById={this.deleteContactById}/>\r\n    </Div>\r\n  )\r\n  }\r\n}\r\n\r\nconst Div = styled.div`\r\nmargin: 10px;\r\npadding: 10px;\r\nwidth: 500px;\r\nposition: relative;\r\n`;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}